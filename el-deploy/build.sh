#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Å–±–æ—Ä–∫–∏ —Å—Ö–µ–º—ã —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏
# –°–æ–±–∏—Ä–∞–µ—Ç –≤—Å–µ –º–æ–¥—É–ª–∏ –≤ –æ–¥–∏–Ω —Ñ–∞–π–ª –∏ –≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç PNG

set -e  # –í—ã—Ö–æ–¥ –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üîå –°–±–æ—Ä–∫–∞ —Å—Ö–µ–º—ã —ç–ª–µ–∫—Ç—Ä–æ–ø—Ä–æ–≤–æ–¥–∫–∏..."

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
mkdir -p tmp/electro-build

# –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
cp main.d2 tmp/all.d2

# –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤—Å–µ—Ö –º–æ–¥—É–ª–µ–π
echo "" >> tmp/all.d2
echo "# === –ò–ú–ü–û–†–¢–ò–†–û–í–ê–ù–ù–´–ï –ú–û–î–£–õ–ò ===" >> tmp/all.d2

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
INCLUDE_FILTERS=()
FILTERS_ACTIVE=false
OUTPUT_FILE="tmp/all.png"  # –ó–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

# –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
while [[ $# -gt 0 ]]; do
    case $1 in
        --include-files)
            if [[ -n "$2" && ! "$2" =~ ^- ]]; then
                INCLUDE_FILTERS+=("$2")
                FILTERS_ACTIVE=true
                shift 2
            else
                echo "‚ùå –û—à–∏–±–∫–∞: --include-files —Ç—Ä–µ–±—É–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç"
                exit 1
            fi
            ;;
        --output-file)
            if [[ -n "$2" && ! "$2" =~ ^- ]]; then
                OUTPUT_FILE="$2"
                shift 2
            else
                echo "‚ùå –û—à–∏–±–∫–∞: --output-file —Ç—Ä–µ–±—É–µ—Ç –∞—Ä–≥—É–º–µ–Ω—Ç"
                exit 1
            fi
            ;;
        *)
            # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –¥—Ä—É–≥–∏–µ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
            shift
            ;;
    esac
done

# –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω—ã —Ñ–∏–ª—å—Ç—Ä—ã, –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
if [[ ${#INCLUDE_FILTERS[@]} -gt 0 ]]; then
    echo "üîç –ü—Ä–∏–º–µ–Ω–µ–Ω—ã —Ñ–∏–ª—å—Ç—Ä—ã –≤–∫–ª—é—á–µ–Ω–∏—è: ${INCLUDE_FILTERS[*]}"
fi

# –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã—Ö–æ–¥–Ω–æ–º —Ñ–∞–π–ª–µ
echo "üìÅ –í—ã—Ö–æ–¥–Ω–æ–π —Ñ–∞–π–ª: $OUTPUT_FILE"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ Ant-style patterns
matches_ant_pattern() {
    local file="$1"
    local pattern="$2"

    # –î–ª—è –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ —Å **/ - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –≤ –∫–æ–Ω—Ü–µ –ø—É—Ç–∏
    if [[ "$pattern" == "**/"* ]]; then
        local filename_pattern="${pattern#**/}"  # –£–¥–∞–ª—è–µ–º **/ –∏–∑ –Ω–∞—á–∞–ª–∞

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è –ª–∏ –ø—É—Ç—å –Ω–∞ —ç—Ç–æ—Ç —Ñ–∞–π–ª
        if [[ "$file" == */"$filename_pattern" ]]; then
            return 0
        fi

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–ª—å–∫–æ –∏–º—è —Ñ–∞–π–ª–∞
        if [[ "$(basename "$file")" == "$filename_pattern" ]]; then
            return 0
        fi
    else
        # –ü—Ä–æ—Å—Ç–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –ø—É—Ç–∏ –∏–ª–∏ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
        if [[ "$file" == "$pattern" ]] || [[ "$(basename "$file")" == "$pattern" ]]; then
            return 0
        fi
    fi

    return 1
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è —Ñ–∞–π–ª–∞ —Ñ–∏–ª—å—Ç—Ä–∞–º
should_include_file() {
    local file="$1"

    # –ï—Å–ª–∏ —Ñ–∏–ª—å—Ç—Ä—ã –Ω–µ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω—ã, –≤–∫–ª—é—á–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã
    if [[ "$FILTERS_ACTIVE" == "false" ]]; then
        return 0
    fi

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–∂–¥–æ–º—É —Ñ–∏–ª—å—Ç—Ä—É (OR –ª–æ–≥–∏–∫–∞)
    for filter in "${INCLUDE_FILTERS[@]}"; do
        if matches_ant_pattern "$file" "$filter"; then
            return 0
        fi
    done

    return 1
}

MODULES_ADDED=0

echo "üìÇ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –º–æ–¥—É–ª–∏:"
echo "üìã –í—Å–µ —Ñ–∞–π–ª—ã: $(echo modules/*.d2)"

# –í–†–ï–ú–ï–ù–ù–û –æ—Ç–∫–ª—é—á–∞–µ–º set -e –¥–ª—è —Ü–∏–∫–ª–∞
set +e
for module in modules/*.d2; do
    echo "üîÑ –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏: $module"
    if [ -f "$module" ]; then
        echo "üîç –ê–Ω–∞–ª–∏–∑ –º–æ–¥—É–ª—è: $module"
        if should_include_file "$module"; then
            echo "üéØ –§–∞–π–ª —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞–º"
            echo "" >> tmp/all.d2
            echo "# –ú–æ–¥—É–ª—å: $(basename $module)" >> tmp/all.d2
            echo "üìñ –ß—Ç–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ..."
            cat "$module" >> tmp/all.d2
            CAT_EXIT_CODE=$?
            echo "üìñ –ö–æ–¥ –≤—ã—Ö–æ–¥–∞ cat: $CAT_EXIT_CODE"
            if [ $CAT_EXIT_CODE -eq 0 ]; then
                echo "‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –º–æ–¥—É–ª—å: $module"
                ((MODULES_ADDED++))
            else
                echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ $module (–∫–æ–¥: $CAT_EXIT_CODE)"
            fi
        else
            echo "‚è≠Ô∏è  –ü—Ä–æ–ø—É—â–µ–Ω –º–æ–¥—É–ª—å: $module (–Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ–∏–ª—å—Ç—Ä–∞–º)"
        fi
    else
        echo "üìÑ $module –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Ñ–∞–π–ª–æ–º"
    fi
    echo "--- –ö–æ–Ω–µ—Ü –æ–±—Ä–∞–±–æ—Ç–∫–∏ $module ---"
done
set -e  # –í–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ

echo "" >> tmp/all.d2
echo "# === –ö–û–ù–ï–¶ –°–ë–û–†–ö–ò ===" >> tmp/all.d2

# –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –≤—ã—Ö–æ–¥–Ω–æ–≥–æ —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
mkdir -p "$(dirname "$OUTPUT_FILE")"

# –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º PNG —Å ELK layout
echo "üîÑ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è PNG —Å ELK layout..."
d2 --layout=elk --theme=300 tmp/all.d2 "$OUTPUT_FILE"

# –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å
if [ $? -eq 0 ]; then
    echo "‚úÖ –°–±–æ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!"
    echo "üìÅ –§–∞–π–ª—ã:"
    echo "   - –°—Ö–µ–º–∞ D2: tmp/all.d2"
    echo "   - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: $OUTPUT_FILE"
    echo ""
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    echo "   –†–∞–∑–º–µ—Ä D2 —Ñ–∞–π–ª–∞: $(wc -l < tmp/all.d2) —Å—Ç—Ä–æ–∫"
    echo "   –ú–æ–¥—É–ª–µ–π —Å–æ–±—Ä–∞–Ω–æ: $MODULES_ADDED"
    if [[ "$FILTERS_ACTIVE" == "true" ]]; then
        echo "   –§–∏–ª—å—Ç—Ä—ã: ${INCLUDE_FILTERS[*]}"
    fi
else
    echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ö–µ–º—ã"
    exit 1
fi